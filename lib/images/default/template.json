<%# vim: set ft=eruby: -%>
{
  "builders": [
    <%- case meta.virtual; when 'virtualbox' -%>
    {
      "name": "virtualbox",
      "type": "virtualbox-iso",

      <%- case meta.distribution; when 'debian' -%>
      "boot_command": [
        "<esc><wait>",
        "auto url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/template.preseed ",
        "debconf/frontend=noninteractive ",
        "hostname={{ .Name }} ",
        "passwd/user-fullname=Operator ",
        "passwd/username={{ user `user` }} ",
        "passwd/user-password={{ user `pass` }} ",
        "passwd/user-password-again={{ user `pass` }} ",
        "<enter>"
      ],
      <%- when 'ubuntu' -%>
      "boot_command": [
        "<esc><esc><enter><wait>",
        "/install/vmlinuz ",
        "auto-install/enable=true ",
        "auto url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/template.preseed ",
        "hostname={{ .Name }} ",
        "debconf/frontend=noninteractive ",
        "keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA ",
        "keyboard-configuration/variant=USA console-setup/ask_detect=false ",
        "passwd/user-fullname=Operator ",
        "passwd/username={{ user `user` }} ",
        "passwd/user-password={{ user `pass` }} ",
        "passwd/user-password-again={{ user `pass` }} ",
        "initrd=/install/initrd.gz -- <enter>"
      ],
      <%- end -%>
      "boot_wait": "5s",
      "cpus": <%= meta.cpu %>,
      "disk_size": <%= meta.disk %>,
      "format": "ova",
      "guest_additions_mode": "attach",
      <%- case meta.distribution; when 'debian' -%>
      "guest_os_type": "Debian_64",
      <%- when 'ubuntu' -%>
      "guest_os_type": "Ubuntu_64",
      <%- end -%>
      "hard_drive_interface": "sata",
      "headless": "<%= meta.headless %>",
      "http_directory": ".",
      "iso_checksum": "<%= meta.iso_checksum %>",
      "iso_checksum_type": "<%= meta.iso_checksum_type %>",
      "iso_checksum_url": "<%= meta.iso_checksum_url %>",
      "iso_url": "<%= meta.iso_url %>",
      "memory": <%= meta.mem %>,
      "shutdown_command": "echo '{{ user `pass` }}' | sudo -S halt -p",
      "ssh_password": "{{ user `pass` }}",
      "ssh_username": "{{ user `user` }}",
      "ssh_wait_timeout": "40m",
      "vboxmanage": [
        ["modifyvm", "{{ .Name }}", "--vram", "16"   ],
        ["modifyvm", "{{ .Name }}", "--audio", "none"],
        ["modifyvm", "{{ .Name }}", "--mouse", "ps2" ]
      ],
      "vm_name": "{{ user `host` }}"
    }
    <%- when 'kvm' -%>
    {
      "name": "kvm",
      "type": "qemu",

      "accelerator": "kvm",
      <%- case meta.distribution; when 'debian' -%>
      "boot_command": [
        "<esc><wait>",
        "auto url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/template.preseed ",
        "debconf/frontend=noninteractive ",
        "hostname={{ .Name }} ",
        "passwd/user-fullname=Operator ",
        "passwd/username={{ user `user` }} ",
        "passwd/user-password={{ user `pass` }} ",
        "passwd/user-password-again={{ user `pass` }} ",
        "<enter>"
      ],
      <%- when 'ubuntu' -%>
      "boot_command": [
        "<esc><esc><enter><wait>",
        "/install/vmlinuz ",
        "auto-install/enable=true ",
        "auto url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/template.preseed ",
        "hostname={{ .Name }} ",
        "debconf/frontend=noninteractive ",
        "keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA ",
        "keyboard-configuration/variant=USA console-setup/ask_detect=false ",
        "passwd/user-fullname=Operator ",
        "passwd/username={{ user `user` }} ",
        "passwd/user-password={{ user `pass` }} ",
        "passwd/user-password-again={{ user `pass` }} ",
        "initrd=/install/initrd.gz -- <enter>"
      ],
      <%- end -%>
      "boot_wait": "5s",
      "cpus": <%= meta.cpu %>,
      "disk_compression": true,
      "disk_size": <%= meta.disk %>,
      "format": "qcow2",
      "headless": "<%= meta.headless %>",
      "http_directory": ".",
      "iso_checksum": "<%= meta.iso_checksum %>",
      "iso_checksum_type": "<%= meta.iso_checksum_type %>",
      "iso_checksum_url": "<%= meta.iso_checksum_url %>",
      "iso_url": "<%= meta.iso_url %>",
      "memory": <%= meta.mem %>,
      "shutdown_command": "echo '{{ user `pass` }}' | sudo -S halt -p",
      "ssh_password": "{{ user `pass` }}",
      "ssh_username": "{{ user `user` }}",
      "ssh_wait_timeout": "40m",
      "vm_name": "{{ user `host` }}"
    }
    <%- when 'vmware' -%>
    {
      "name": "vmware",
      "type": "vmware-iso",

      <%- case meta.distribution; when 'debian' -%>
      "boot_command": [
        "<esc><wait>",
        "auto url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/template.preseed ",
        "debconf/frontend=noninteractive ",
        "hostname={{ .Name }} ",
        "passwd/user-fullname=Operator ",
        "passwd/username={{ user `user` }} ",
        "passwd/user-password={{ user `pass` }} ",
        "passwd/user-password-again={{ user `pass` }} ",
        "<enter>"
      ],
      <%- when 'ubuntu' -%>
      "boot_command": [
        "<esc><esc><enter><wait>",
        "/install/vmlinuz ",
        "auto-install/enable=true ",
        "auto url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/template.preseed ",
        "hostname={{ .Name }} ",
        "debconf/frontend=noninteractive ",
        "keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA ",
        "keyboard-configuration/variant=USA console-setup/ask_detect=false ",
        "passwd/user-fullname=Operator ",
        "passwd/username={{ user `user` }} ",
        "passwd/user-password={{ user `pass` }} ",
        "passwd/user-password-again={{ user `pass` }} ",
        "initrd=/install/initrd.gz -- <enter>"
      ],
      <%- end -%>
      "boot_wait": "5s",
      "cpus": <%= meta.cpu %>,
      "disk_size": <%= meta.disk %>,
      "format": "ova",
      <%- case meta.distribution; when 'debian' -%>
      "guest_os_type": "debian9-64",
      <%- when 'ubuntu' -%>
      "guest_os_type": "ubuntu-64",
      <%- end -%>
      "headless": "<%= meta.headless %>",
      "http_directory": ".",
      "iso_checksum": "<%= meta.iso_checksum %>",
      "iso_checksum_type": "<%= meta.iso_checksum_type %>",
      "iso_checksum_url": "<%= meta.iso_checksum_url %>",
      "iso_url": "<%= meta.iso_url %>",
      "memory": <%= meta.mem %>,
      "shutdown_command": "echo '{{ user `pass` }}' | sudo -S halt -p",
      "ssh_password": "{{ user `pass` }}",
      "ssh_username": "{{ user `user` }}",
      "ssh_wait_timeout": "40m",
      "tools_upload_flavor": "linux",
      "vm_name": "{{ user `host` }}"
    }
    <%- when 'lxc' -%>
    {
      "name": "lxc",
      "type": "lxc",

      "attach_options": ["--clear-env"],
      "config_file": "/usr/share/lxc/config/common.conf",
      "container_name": "{{ user `host` }}",
      <%- case meta.distribution; when 'debian' -%>
      "template_name": "<%= meta.distribution %>",
      <%- when 'ubuntu' -%>
      "template_name": "download",
      <%- end -%>
      "template_parameters": [
        "--dist", "<%= meta.distribution %>",
        "--release", "<%= meta.codename %>",
        "--arch", "<%= meta.arch %>"
      ]
    }
    <%- when 'docker' -%>
    {
      "name": "docker",
      "type": "docker",

      "container_dir": "/mnt",
      "export_path": "{{ user `name` }}.tar",
      "image": "debian:<%= meta.codename %>"
    }
    <%- end -%>
  ],

  "provisioners": [
    {
      "type": "shell",

      <%- if meta.virtual == 'lxc' -%>
      "execute_command": "{{ .Vars }} bash -e {{ .Path }}",
      <%- else -%>
      "execute_command": "echo '{{ user `pass` }}' | {{ .Vars }} sudo -E -S bash -e {{ .Path }}",
      <%- end -%>
      "environment_vars": ["LC_ALL=C"],

      "scripts": [
        "scripts/pre.sh",
        "template.sh",
        "scripts/<%= meta.virtual %>.sh",
        "scripts/vagrant.sh",
        "scripts/cleanup.sh",
        "scripts/minimize.sh",
        "scripts/post.sh"
      ]
    }
  ],

  "post-processors": [
    <%- if meta.virtual == 'docker' -%>
    {
      "type": "docker-import",

      "keep_input_artifact": true,
      "repository": "<%= meta.docker_account %>/{{ user `name` }}",
      "changes": [
        "ENV LANG en_US.UTF-8",
        "ENV LANGUAGE en_US.UTF-8",
        "ENV LC_ALL en_US.UTF-8"
      ],
      "only": ["docker"]
    },
    <%- end -%>
    {
      "type": "vagrant",

      "output": "<%= meta.output %>",
      "vagrantfile_template": "template.vagrantfile"
    }
  ],

  "variables": {
    "name": "<%= meta.basename %>",
    "host": "<%= meta.hostname %>",
    "user": "<%= meta.username %>",
    "pass": "<%= meta.password %>"
  }
}
